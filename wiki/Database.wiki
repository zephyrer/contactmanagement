#summary 数据储存与搜索算法

= Introduction =
项目分三大步：

１、具备基本功能的电话本。

2、扩展电话本的功能，使其具备存储更多信息的能力。比如标签等。

3、根据社会网络分析的理论做模型和后续的算法。

现在讨论的是 第二步：
如何设计我们的数据库、存储与搜索的算法。

= Details =

*一、需存储的数据及其特点*

主要是联系人信息 

1、固定的单一信息：姓名、生日、性别
        特点：信息单一，且基本不需要修改。
2、不唯一的基本信息：学校（大学、研究生）、专业（可能转专业）、家庭地址（可能搬过家、也可能在多个城市有住房）。
       特点：信息固定，但是不唯一，而且随着时间的增加，信息会越来越多。
       比如，大学的时候只有本科信息就行了，上了研究生的就要有研究生和本科的信息。
               注意一个事实，认识一个研究生，不一定知道他的本科学校。不能假设所有的研究生都有本科信息栏。
3、联系方式：
       后面最功能的时候，一般需要声明一个class类，存放各种联系方式。
       用c语言的话，可以先写到一个结构体里面。
           电话、邮箱——注意，电话会换，原信息不删除。据结构里面删除树的节点时，提到过类似的思想。
           qq——号码肯定是要存的，对应的昵称存不存？
           豆瓣、校内、facebook等——昵称，网址
            可能还有其他联系方式。
          
4、可有可无的信息：
           兴趣：既要存对什么感兴趣，又要存在这方面是什么水平（精通、熟练、还是略懂）
           备注信息：可能是一句话，可能是1000短文。——我们是否提供这个功能，是否限制备注的字数。
            
          暂时不必写这部分的代码。
          但是注意留好接口，如果联系人信息中包含了这些内容。怎么办？
          具体要思考，信息量会有多大。有时可能只是一句话，有时可能是一篇常常的备注文字。

*二、数据规模*

主要包括三类数据：

1、个人性质的联系人。
     大多数人，联系人不会超过200个。
     我需要1000个联系人的规模。

2、组织性质的联系人。
比如公司、学校、院系、公益组织、临时性的小团队（比如，我们几个人为了开发这个软件而临时组建的团队）、玩游戏的战队也是一个小团队。

预计上千条吧。
小团队生命周期比较短，团队信息保存多长时间？

给用户一定的自由，不能过度自由。
小团队在数据库中保存的时间，需定量研究，给出一个算法。

3、标签及其之间的逻辑关系。
实行信息顺序存储，标签进行树状管理的原则。
标签之间也有上下级和从属关系。


总体来说，
最大信息量可以暂定为三千条信息。
每条信息包括十几个选项（比如名称、电话等）

一条把包含几千个节点的书。深度一般为3层，最大深度为四五层。


*三、标签功能*

_功能要求：_

1、一个联系人可以添加多个标签。

2、支持对标签分组，可以进行树状管理。

3、同一个联系人的不同标签可以出现在树状图的不同位置，
   但指向的是同一个联系人信息。

举例说明：

现有标签：物理系、计算机系、应用物理，理论物理，软件工程。

其中，物理系、计算机系软件工程是并列的三个院系。
应用物理、 理论物理是 物理系下面的两个专业。

|-学生

|----物理系

||--------应用物理

||--------理论物理

|-----计算机系

|-----软件工程


有的人可能只添加了理论物理的标签，没添加物理系的标签。
当我要找物理系的人的时候，我希望，只要搜索物理系，就能找到没加物理系标签的这些人。

_实现的技术细节_

1、每个联系人设有一个ID，通过ID可以迅速找到联系人。
可以是指向内存地址的指针，或者是数组的索引。

问题：这种ID与内存有关，是动态的。无法永久保存到 树状图的逻辑结构中。
有没有静态ID还可以快速访问的方法？像身份证一样。

2、标签存为树状图，叶节点是联系人的ID。

*注意：*

1、标签树状图的深度有限制，不能给用户太大的自由度。
从社交网络理论的角度讲，太深的逻辑层次也不利于用户管理联系人。

2、现在有两组数据记录联系人及其对应的标签。联系人信息中包含标签选项，另一个是标签的树状图包含联系人ID。

必须注意保持数据更新的一致性。可以用指针来实现。但是如何长期存储？

除了空间换时间，有没有其他的处理方法?